"""empty message

Revision ID: 32be118bfea
Revises: 27cb2ef1510
Create Date: 2016-03-25 23:49:44.861553

"""

# revision identifiers, used by Alembic.
revision = '32be118bfea'
down_revision = '27cb2ef1510'

# add this here in order to use revision with branch_label
branch_labels = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('persona',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=25), nullable=True),
        sa.Column('pretty_name', sa.String(length=100), nullable=True),
        sa.Column('type', sa.String(length=100), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('active', sa.Boolean(), nullable=True),
        sa.Column('confirmed_at', sa.DateTime(), nullable=True),
        sa.Column('last_login_at', sa.DateTime(), nullable=True),
        sa.Column('current_login_at', sa.DateTime(), nullable=True),
        sa.Column('last_login_ip', sa.String(length=255), nullable=True),
        sa.Column('current_login_ip', sa.String(length=255), nullable=True),
        sa.Column('login_count', sa.Integer(), nullable=True),
        sa.Column('language_preference', sa.String(length=2), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table('login',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('persona_id', sa.Integer(), nullable=False),
        sa.Column('provider', sa.String(length=255), nullable=False),
        sa.Column('profile_id', sa.String(length=255), nullable=False),
        sa.Column('username', sa.String(length=255), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('access_token', sa.String(length=255), nullable=True),
        sa.Column('secret', sa.String(length=255), nullable=True),
        sa.Column('first_name', sa.String(length=255), nullable=True),
        sa.Column('last_name', sa.String(length=255), nullable=True),
        sa.Column('cn', sa.String(length=255), nullable=True),
        sa.Column('profile_url', sa.String(length=512), nullable=True),
        sa.Column('image_url', sa.String(length=512), nullable=True),
        sa.ForeignKeyConstraint(['persona_id'], ['persona.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('persona_roles',
        sa.Column('source_id', sa.Integer(), nullable=False),
        sa.Column('target_id', sa.Integer(), nullable=False),
        sa.Column('role', sa.String(length=20), nullable=False),
        sa.ForeignKeyConstraint(['source_id'], ['persona.id'], ),
        sa.ForeignKeyConstraint(['target_id'], ['persona.id'], ),
        sa.UniqueConstraint('source_id', 'target_id',
                            name='unique_persona_roles')
    )

    # drop old system

    op.drop_constraint('activities_subject_id_fkey', 'activities',
                       type_='foreignkey')
    op.drop_constraint('activities_whom_id_fkey', 'activities',
                       type_='foreignkey')
    op.drop_constraint('objects_owner_id_fkey', 'objects',
                       type_='foreignkey')

    op.drop_table('social_connection')
    op.drop_table('roles_users')
    op.drop_table('role')
    op.drop_table('user')

    op.create_foreign_key(None, 'activities', 'persona',
                          ['whom_id'], ['id'])
    op.create_foreign_key(None, 'activities', 'persona',
                          ['subject_id'], ['id'])

    op.create_foreign_key(None, 'objects', 'persona',
                          ['owner_id'], ['id'])
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'objects', type_='foreignkey')
    op.create_foreign_key('objects_owner_id_fkey', 'objects', 'user', ['owner_id'], ['id'])
    op.drop_constraint(None, 'activities', type_='foreignkey')
    op.drop_constraint(None, 'activities', type_='foreignkey')
    op.create_foreign_key('activities_whom_id_fkey', 'activities', 'user', ['whom_id'], ['id'])
    op.create_foreign_key('activities_subject_id_fkey', 'activities', 'user', ['subject_id'], ['id'])
    op.create_table('role',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('role_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='role_pkey'),
    sa.UniqueConstraint('name', name='role_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='roles_users_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='roles_users_user_id_fkey')
    )
    op.create_table('social_connection',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('profile_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('access_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('secret', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cn', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('profile_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='social_connection_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='social_connection_pkey')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('confirmed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_login_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('current_login_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_login_ip', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('current_login_ip', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('login_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('language_preference', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key')
    )
    op.drop_table('profile_access')
    op.drop_table('login')
    op.drop_table('persona')
    ### end Alembic commands ###
